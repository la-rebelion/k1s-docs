"use strict";(self.webpackChunkk_1_s_docs=self.webpackChunkk_1_s_docs||[]).push([[981],{2645:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var s=r(4848),n=r(8453);const i={sidebar_label:"K1s Terminal",sidebar_position:1,title:"K1s Terminal",description:"User-friendly interface for managing Kubernetes applications, designed to be developer-friendly whether you're a novice or an experienced cluster administrator",keywords:["k1s","kubernetes","k1s terminal","kubernetes cluster","k1s k8s","k1s kubernetes","k8s best practices","terminal best practices"],slug:"/k1s-terminal"},o=void 0,a={id:"k1s-terminal/intro",title:"K1s Terminal",description:"User-friendly interface for managing Kubernetes applications, designed to be developer-friendly whether you're a novice or an experienced cluster administrator",source:"@site/docs/k1s-terminal/intro.md",sourceDirName:"k1s-terminal",slug:"/k1s-terminal",permalink:"/k1s-terminal",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"K1s Terminal",sidebar_position:1,title:"K1s Terminal",description:"User-friendly interface for managing Kubernetes applications, designed to be developer-friendly whether you're a novice or an experienced cluster administrator",keywords:["k1s","kubernetes","k1s terminal","kubernetes cluster","k1s k8s","k1s kubernetes","k8s best practices","terminal best practices"],slug:"/k1s-terminal"},sidebar:"mainSidebar",previous:{title:"\ud83d\udcbb K1s Terminal",permalink:"/k1s-terminal/"},next:{title:"Clusters",permalink:"/k1s-terminal/clusters"}},l={},c=[{value:"<code>kubectl</code> Verbs",id:"kubectl-verbs",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"K1s Terminal rethinks the Kubernetes experience from a developer's perspective, making it more accessible, efficient, and enjoyable for developers of all skill levels. It is a powerful, user-friendly interface for managing Kubernetes applications, built with modern technologies like React and TypeScript. It is designed to be easy to use whether you're a Kubernetes novice or an experienced cluster administrator."}),"\n",(0,s.jsxs)(t.p,{children:["K1s is a Kubernetes platform that allows you to quickly get to grips with the technology without the tough process of installation and configuration. K1sT is a terminal that is natively integrated with Kubernetes and cloud-native tools, making it a friendly, readable, color-coded, and interactive output for the ",(0,s.jsx)(t.code,{children:"kubectl"})," command. It is a terminal that facilitate the navigation through the Kubernetes resources easily, making it the ultimate tool for streamlining your workflow and improving your career path."]}),"\n",(0,s.jsxs)(t.h2,{id:"kubectl-verbs",children:[(0,s.jsx)(t.code,{children:"kubectl"})," Verbs"]}),"\n",(0,s.jsx)(t.p,{children:"Kubernetes API and kubectl support several verbs that correspond to different actions on resources. Here are the most commonly used ones:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"get"}),": Retrieve one or more resources. This verb is equivalent to a GET request in HTTP."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"list"}),": Retrieve a list of resources. This verb is equivalent to a GET request in HTTP."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"watch"}),": Watch for changes to a particular resource or set of resources in real time."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"create"}),": Create a new resource. This verb is equivalent to a POST request in HTTP."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"update"}),": Update an existing resource. This verb is equivalent to a PUT request in HTTP."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"patch"}),": Update one or more fields of an existing resource. This verb is equivalent to a PATCH request in HTTP."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"delete"}),": Remove a resource. This verb is equivalent to a DELETE request in HTTP."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"deletecollection"}),": Remove a collection of resources. This verb is equivalent to a DELETE request in HTTP."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"These verbs are used in the context of Role-Based Access Control (RBAC) to define permissions for different roles. For example, a role might be allowed to get, list, and watch pods, but not create, update, patch, or delete them."}),"\n",(0,s.jsxs)(t.p,{children:["K1sT implements these verbs in a user-friendly way, making it easy to interact with Kubernetes resources and manage your applications. In the ",(0,s.jsx)(t.a,{href:"/roadmap",children:"roadmap"}),", we are planning to add more features to make the terminal even more powerful and user-friendly, keep an eye on the ",(0,s.jsx)(t.a,{href:"/updates/k1s-terminal",children:"release notes"})," for the latest updates."]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var s=r(6540);const n={},i=s.createContext(n);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);